{
  "version": 3,
  "sources": ["../../rete-context-menu-plugin/src/presets/classic/factory.ts", "../../rete-context-menu-plugin/src/presets/classic/index.ts", "../../rete-context-menu-plugin/src/presets/index.ts", "../../rete-context-menu-plugin/src/index.ts"],
  "sourcesContent": ["import { NodeEditor } from 'rete'\nimport { BaseAreaPlugin } from 'rete-area-plugin'\n\nimport { Item } from '../../types'\nimport { BSchemes, ItemDefinition } from './types'\n\nexport function createItem<S extends BSchemes>(\n  [label, factory]: ItemDefinition<S>,\n  key: string | number,\n  context: { editor: NodeEditor<S>, area: BaseAreaPlugin<S, any> }\n): Item {\n  const item = {\n    label,\n    key: String(key)\n  }\n\n  if (typeof factory === 'function') {\n    return <Item>{\n      ...item,\n      async handler() {\n        const node = await factory()\n\n        await context.editor.addNode(node)\n\n        context.area.translate(node.id, context.area.area.pointer)\n      }\n    }\n  }\n  return <Item>{\n    ...item,\n    subitems: factory.map((data, i) => createItem(data, i, context))\n  }\n}\n", "import { NodeEditor } from 'rete'\nimport { BaseAreaPlugin } from 'rete-area-plugin'\n\nimport { Item, Items } from '../../types'\nimport { createItem } from './factory'\nimport { BSchemes, ItemDefinition } from './types'\n\n/**\n * Classic context menu preset.\n * Configures nodes/actions items for root and Delete/Clone items for nodes\n * @param nodes List of items\n * @example Presets.classic.setup([\n  [\"Math\", [\n    [\"Number\", () => new NumberNode()],\n  ]]\n])\n */\nexport function setup<Schemes extends BSchemes>(nodes: ItemDefinition<Schemes>[]) {\n  return <Items<Schemes>>(function (context, plugin) {\n    const area = plugin.parentScope<BaseAreaPlugin<Schemes, any>>(BaseAreaPlugin)\n    const editor = area.parentScope<NodeEditor<Schemes>>(NodeEditor)\n\n    if (context === 'root') {\n      return {\n        searchBar: true,\n        list: nodes.map((item, i) => createItem(item, i, { editor, area }))\n      }\n    }\n\n    const deleteItem: Item = {\n      label: 'Delete',\n      key: 'delete',\n      async handler() {\n        const nodeId = context.id\n        const connections = editor.getConnections().filter(c => {\n          return c.source === nodeId || c.target === nodeId\n        })\n\n        for (const connection of connections) {\n          await editor.removeConnection(connection.id)\n        }\n        await editor.removeNode(nodeId)\n      }\n    }\n\n    const clone = context.clone\n    const cloneItem: undefined | Item = clone && {\n      label: 'Clone',\n      key: 'clone',\n      async handler() {\n        const node = clone()\n\n        await editor.addNode(node)\n\n        area.translate(node.id, area.area.pointer)\n      }\n    }\n\n    return {\n      searchBar: false,\n      list: [\n        deleteItem,\n        ...(cloneItem ? [cloneItem] : [])\n      ]\n    }\n  })\n}\n", "/**\n * Presets that create items for root and node specific context menu.\n * @module\n*/\n\nexport * as classic from './classic'\n", "import { BaseSchemes, Scope } from 'rete'\nimport { BaseArea, BaseAreaPlugin, RenderSignal } from 'rete-area-plugin'\n\nimport { Item, Items, Position } from './types'\n\nexport * as Presets from './presets'\n\n/**\n * Context menu plugin props\n * @priority 8\n */\nexport type Props<Schemes extends BaseSchemes> = {\n  /** delay before hiding context menu */\n  delay?: number\n  /** menu items, can be produced by preset */\n  items: Items<Schemes>\n}\nexport type RenderMeta = { filled?: boolean }\n\n/**\n * Signal types produced by ContextMenuPlugin instance\n * @priority 10\n */\nexport type ContextMenuExtra =\n  | RenderSignal<'contextmenu', {\n    items: Item[]\n    onHide(): void\n    searchBar?: boolean\n  }>\n\ntype Requires<Schemes extends BaseSchemes> =\n  | { type: 'contextmenu', data: { event: MouseEvent, context: 'root' | Schemes['Node'] | Schemes['Connection'] } }\n  | { type: 'unmount', data: { element: HTMLElement } }\n  | { type: 'pointerdown', data: { position: Position, event: PointerEvent } }\n\n/**\n * Plugin for context menu.\n * Responsible for initialing rendering of context menu with predefined items.\n * @priority 9\n * @emits render\n * @emits unmount\n * @listens unmount\n * @listens contextmenu\n * @listens pointerdown\n */\nexport class ContextMenuPlugin<Schemes extends BaseSchemes> extends Scope<never, [Requires<Schemes> | ContextMenuExtra]> {\n  /**\n   * @param props Properties\n   */\n  constructor(private props: Props<Schemes>) {\n    super('context-menu')\n  }\n\n  setParent(scope: Scope<Requires<Schemes>>): void {\n    super.setParent(scope)\n\n    const area = this.parentScope<BaseAreaPlugin<Schemes, BaseArea<Schemes>>>(BaseAreaPlugin)\n    const container: HTMLElement = (area as any).container\n\n    if (!container || !(container instanceof HTMLElement)) throw new Error('container expected')\n\n    const element = document.createElement('div')\n\n    element.style.display = 'none'\n    element.style.position = 'fixed'\n\n    // eslint-disable-next-line max-statements\n    this.addPipe(context => {\n      const parent = this.parentScope()\n\n      if (!context || typeof context !== 'object' || !('type' in context)) return context\n      if (context.type === 'unmount') {\n        if (context.data.element === element) {\n          element.style.display = 'none'\n        }\n      } else if (context.type === 'contextmenu') {\n        context.data.event.preventDefault()\n        context.data.event.stopPropagation()\n\n        const { searchBar, list } = this.props.items(context.data.context, this)\n\n        container.appendChild(element)\n        element.style.left = `${context.data.event.clientX}px`\n        element.style.top = `${context.data.event.clientY}px`\n        element.style.display = ''\n\n        parent.emit({\n          type: 'render',\n          data: {\n            type: 'contextmenu',\n            element,\n            searchBar,\n            onHide() {\n              parent.emit({ type: 'unmount', data: { element } })\n            },\n            items: list\n          }\n        })\n      } else if (context.type === 'pointerdown') {\n        if (!context.data.event.composedPath().includes(element)) {\n          parent.emit({ type: 'unmount', data: { element } })\n        }\n      }\n      return context\n    })\n  }\n}\n"],
  "mappings": "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",
  "names": ["createItem", "_ref", "key", "context", "_ref2", "_slicedToArray", "label", "factory", "item", "String", "_objectSpread", "handler", "_asyncToGenerator", "_regeneratorRuntime", "mark", "_callee", "node", "wrap", "_callee$", "_context", "prev", "next", "sent", "editor", "addNode", "area", "translate", "id", "pointer", "stop", "subitems", "map", "data", "i", "setup", "nodes", "plugin", "parentScope", "BaseAreaPlugin", "NodeEditor", "searchBar", "list", "deleteItem", "nodeId", "connections", "_iterator", "_step", "connection", "getConnections", "filter", "c", "source", "target", "_createForOfIteratorHelper", "s", "n", "done", "value", "removeConnection", "t0", "e", "f", "finish", "removeNode", "clone", "cloneItem", "_callee2", "_callee2$", "_context2", "concat", "_toConsumableArray", "ContextMenuPlugin", "_Scope", "_inherits", "_super", "_createSuper", "props", "_this", "_classCallCheck", "call", "_createClass", "setParent", "scope", "_this2", "_get", "_getPrototypeOf", "prototype", "container", "HTMLElement", "Error", "element", "document", "createElement", "style", "display", "position", "addPipe", "parent", "_typeof", "type", "event", "preventDefault", "stopPropagation", "_this2$props$items", "items", "appendChild", "left", "clientX", "top", "clientY", "emit", "onHide", "composedPath", "includes", "Scope"]
}
