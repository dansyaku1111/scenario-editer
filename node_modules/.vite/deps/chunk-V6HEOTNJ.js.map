{
  "version": 3,
  "sources": ["../../@babel/runtime/helpers/esm/arrayLikeToArray.js", "../../@babel/runtime/helpers/esm/arrayWithoutHoles.js", "../../@babel/runtime/helpers/esm/iterableToArray.js", "../../@babel/runtime/helpers/esm/unsupportedIterableToArray.js", "../../@babel/runtime/helpers/esm/nonIterableSpread.js", "../../@babel/runtime/helpers/esm/toConsumableArray.js", "../../rete-area-plugin/src/content.ts", "../../rete-area-plugin/src/utils.ts", "../../rete-area-plugin/src/drag.ts", "../../rete-area-plugin/src/zoom.ts", "../../rete-area-plugin/src/area.ts", "../../rete-area-plugin/src/base.ts", "../../rete-area-plugin/src/connection-view.ts", "../../rete-area-plugin/src/elements-holder.ts", "../../rete-area-plugin/src/node-view.ts", "../../rete-area-plugin/src/extensions/shared/utils.ts", "../../rete-area-plugin/src/extensions/bounding-box.ts", "../../rete-area-plugin/src/extensions/order.ts", "../../rete-area-plugin/src/extensions/restrictor.ts", "../../rete-area-plugin/src/extensions/selectable.ts", "../../rete-area-plugin/src/extensions/show-input-control.ts", "../../rete-area-plugin/src/extensions/snap.ts", "../../rete-area-plugin/src/extensions/zoom-at.ts", "../../rete-area-plugin/src/extensions/index.ts", "../../rete-area-plugin/src/index.ts"],
  "sourcesContent": ["function _arrayLikeToArray(r, a) {\n  (null == a || a > r.length) && (a = r.length);\n  for (var e = 0, n = Array(a); e < a; e++) n[e] = r[e];\n  return n;\n}\nexport { _arrayLikeToArray as default };", "import arrayLikeToArray from \"./arrayLikeToArray.js\";\nfunction _arrayWithoutHoles(r) {\n  if (Array.isArray(r)) return arrayLikeToArray(r);\n}\nexport { _arrayWithoutHoles as default };", "function _iterableToArray(r) {\n  if (\"undefined\" != typeof Symbol && null != r[Symbol.iterator] || null != r[\"@@iterator\"]) return Array.from(r);\n}\nexport { _iterableToArray as default };", "import arrayLikeToArray from \"./arrayLikeToArray.js\";\nfunction _unsupportedIterableToArray(r, a) {\n  if (r) {\n    if (\"string\" == typeof r) return arrayLikeToArray(r, a);\n    var t = {}.toString.call(r).slice(8, -1);\n    return \"Object\" === t && r.constructor && (t = r.constructor.name), \"Map\" === t || \"Set\" === t ? Array.from(r) : \"Arguments\" === t || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t) ? arrayLikeToArray(r, a) : void 0;\n  }\n}\nexport { _unsupportedIterableToArray as default };", "function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\nexport { _nonIterableSpread as default };", "import arrayWithoutHoles from \"./arrayWithoutHoles.js\";\nimport iterableToArray from \"./iterableToArray.js\";\nimport unsupportedIterableToArray from \"./unsupportedIterableToArray.js\";\nimport nonIterableSpread from \"./nonIterableSpread.js\";\nfunction _toConsumableArray(r) {\n  return arrayWithoutHoles(r) || iterableToArray(r) || unsupportedIterableToArray(r) || nonIterableSpread();\n}\nexport { _toConsumableArray as default };", "export class Content {\n  public holder: HTMLElement\n\n  constructor(private reordered: (target: HTMLElement) => Promise<unknown>) {\n    this.holder = document.createElement('div')\n    this.holder.style.transformOrigin = '0 0'\n  }\n\n  public getPointerFrom(event: MouseEvent) {\n    const { left, top } = this.holder.getBoundingClientRect()\n    const x = event.clientX - left\n    const y = event.clientY - top\n\n    return { x, y }\n  }\n\n  add(element: HTMLElement) {\n    this.holder.appendChild(element)\n  }\n\n  // eslint-disable-next-line no-undef\n  async reorder(target: HTMLElement, next: ChildNode | null) {\n    if (!this.holder.contains(target)) {\n      throw new Error(`content doesn't have 'target' for reordering`)\n    }\n    if (next !== null && !this.holder.contains(next)) {\n      throw new Error(`content doesn't have 'next' for reordering`)\n    }\n\n    this.holder.insertBefore(target, next)\n    await this.reordered(target)\n  }\n\n  remove(element: HTMLElement) {\n    if (this.holder.contains(element)) {\n      this.holder.removeChild(element)\n    }\n  }\n}\n", "import { Position, Size } from './types'\n\ntype PointerHandler = (event: PointerEvent) => void\ntype PointerListenerHandlers = {\n  down: PointerHandler\n  move: PointerHandler\n  up: PointerHandler\n}\n\nexport type PointerListener = { destroy: () => void }\n\n/**\n * listen to pointerdown, window's pointermove and pointerup events,\n * where last two not active before pointerdown triggered for performance reasons\n */\nexport function usePointerListener(element: HTMLElement, handlers: PointerListenerHandlers): PointerListener {\n  const move: PointerHandler = event => {\n    handlers.move(event)\n  }\n  const up: PointerHandler = event => {\n    window.removeEventListener('pointermove', move)\n    window.removeEventListener('pointerup', up)\n    window.removeEventListener('pointercancel', up)\n    handlers.up(event)\n  }\n  const down: PointerHandler = event => {\n    window.addEventListener('pointermove', move)\n    window.addEventListener('pointerup', up)\n    window.addEventListener('pointercancel', up)\n    handlers.down(event)\n  }\n\n  element.addEventListener('pointerdown', down)\n\n  return {\n    destroy() {\n      element.removeEventListener('pointerdown', down)\n      window.removeEventListener('pointermove', move)\n      window.removeEventListener('pointerup', up)\n      window.removeEventListener('pointercancel', up)\n    }\n  }\n}\n\n/**\n * Bounding box\n */\nconst min = (arr: number[]) => arr.length === 0\n  ? 0\n  : Math.min(...arr)\nconst max = (arr: number[]) => arr.length === 0\n  ? 0\n  : Math.max(...arr)\n\nexport function getBoundingBox(rects: ({ position: Position } & Size)[]) {\n  const left = min(rects.map(rect => rect.position.x))\n  const top = min(rects.map(rect => rect.position.y))\n  const right = max(rects.map(rect => rect.position.x + rect.width))\n  const bottom = max(rects.map(rect => rect.position.y + rect.height))\n\n  return {\n    left,\n    right,\n    top,\n    bottom,\n    width: Math.abs(left - right),\n    height: Math.abs(top - bottom),\n    center: {\n      x: (left + right) / 2,\n      y: (top + bottom) / 2\n    }\n  }\n}\n", "import { Position } from './types'\nimport { PointerListener, usePointerListener } from './utils'\n\ntype Events = {\n  start: (e: PointerEvent) => void\n  translate: (x: number, y: number, e: PointerEvent) => unknown\n  drag: (e: PointerEvent) => void\n}\n\ntype Guards = {\n  down: (e: PointerEvent) => boolean\n  move: (e: PointerEvent) => boolean\n}\n\ntype DragConfig = {\n  getCurrentPosition: () => Position\n  getZoom: () => number\n}\n\n/**\n * Drag handler, used to handle dragging of the area and nodes. Can be extended to add custom behavior.\n */\nexport class Drag {\n  private pointerStart?: Position\n  private startPosition?: Position\n  private pointerListener!: PointerListener\n  protected config!: DragConfig\n  protected events!: Events\n  protected guards: Guards\n\n  constructor(guards?: Guards) {\n    this.guards = guards || {\n      down: e => !(e.pointerType === 'mouse' && e.button !== 0),\n      move: () => true\n    }\n  }\n\n  public initialize(element: HTMLElement, config: DragConfig, events: Events) {\n    this.config = config\n    this.events = events\n    element.style.touchAction = 'none'\n    this.pointerListener = usePointerListener(element, {\n      down: this.down,\n      move: this.move,\n      up: this.up\n    })\n  }\n\n  private down = (e: PointerEvent) => {\n    if (!this.guards.down(e)) return\n\n    e.stopPropagation()\n    this.pointerStart = { x: e.pageX, y: e.pageY }\n    this.startPosition = { ...this.config.getCurrentPosition() }\n\n    this.events.start(e)\n  }\n\n  private move = (e: PointerEvent) => {\n    if (!this.pointerStart || !this.startPosition) return\n    if (!this.guards.move(e)) return\n    e.preventDefault()\n\n    const delta = {\n      x: e.pageX - this.pointerStart.x,\n      y: e.pageY - this.pointerStart.y\n    }\n    const zoom = this.config.getZoom()\n    const x = this.startPosition.x + delta.x / zoom\n    const y = this.startPosition.y + delta.y / zoom\n\n    void this.events.translate(x, y, e)\n  }\n\n  private up = (e: PointerEvent) => {\n    if (!this.pointerStart) return\n\n    delete this.pointerStart\n    this.events.drag(e)\n  }\n\n  public destroy() {\n    this.pointerListener.destroy()\n  }\n}\n", "\n/**\n * Zoom source\n */\nexport type ZoomSource = 'wheel' | 'touch' | 'dblclick'\nexport type OnZoom = (delta: number, ox: number, oy: number, source?: ZoomSource) => void\n\n/**\n * Zoom class, used to handle zooming of the area. Can be extended to add custom behavior.\n * @internal\n */\nexport class Zoom {\n  protected previous: { cx: number, cy: number, distance: number } | null = null\n  protected pointers: PointerEvent[] = []\n  protected container!: HTMLElement\n  protected element!: HTMLElement\n  protected onzoom!: OnZoom\n\n  constructor(protected intensity: number) { }\n\n  public initialize(container: HTMLElement, element: HTMLElement, onzoom: OnZoom) {\n    this.container = container\n    this.element = element\n    this.onzoom = onzoom\n    this.container.addEventListener('wheel', this.wheel)\n    this.container.addEventListener('pointerdown', this.down)\n    this.container.addEventListener('dblclick', this.dblclick)\n\n    window.addEventListener('pointermove', this.move)\n    window.addEventListener('pointerup', this.up)\n    window.addEventListener('pointercancel', this.up)\n    window.addEventListener('contextmenu', this.contextmenu)\n  }\n\n  protected wheel = (e: WheelEvent) => {\n    e.preventDefault()\n\n    const { left, top } = this.element.getBoundingClientRect()\n    const isNegative = e.deltaY < 0\n    const delta = isNegative\n      ? this.intensity\n      : -this.intensity\n    const ox = (left - e.clientX) * delta\n    const oy = (top - e.clientY) * delta\n\n    this.onzoom(delta, ox, oy, 'wheel')\n  }\n\n  private getTouches() {\n    const e = { touches: this.pointers }\n    const [x1, y1] = [e.touches[0].clientX, e.touches[0].clientY]\n    const [x2, y2] = [e.touches[1].clientX, e.touches[1].clientY]\n\n    const distance = Math.sqrt(Math.pow(x1 - x2, 2) + Math.pow(y1 - y2, 2))\n\n    return {\n      cx: (x1 + x2) / 2,\n      cy: (y1 + y2) / 2,\n      distance\n    }\n  }\n\n  protected down = (e: PointerEvent) => {\n    this.pointers.push(e)\n  }\n\n  protected move = (e: PointerEvent) => {\n    this.pointers = this.pointers.map(p => p.pointerId === e.pointerId\n      ? e\n      : p)\n    if (!this.isTranslating()) return\n\n    const { left, top } = this.element.getBoundingClientRect()\n    const { cx, cy, distance } = this.getTouches()\n\n    if (this.previous !== null && this.previous.distance > 0) {\n      const delta = distance / this.previous.distance - 1\n\n      const ox = (left - cx) * delta\n      const oy = (top - cy) * delta\n\n      this.onzoom(delta, ox - (this.previous.cx - cx), oy - (this.previous.cy - cy), 'touch')\n    }\n    this.previous = { cx, cy, distance }\n  }\n\n  protected contextmenu = () => {\n    this.pointers = []\n  }\n\n  protected up = (e: PointerEvent) => {\n    this.previous = null\n    this.pointers = this.pointers.filter(p => p.pointerId !== e.pointerId)\n  }\n\n  protected dblclick = (e: MouseEvent) => {\n    e.preventDefault()\n\n    const { left, top } = this.element.getBoundingClientRect()\n    const delta = 4 * this.intensity\n\n    const ox = (left - e.clientX) * delta\n    const oy = (top - e.clientY) * delta\n\n    this.onzoom(delta, ox, oy, 'dblclick')\n  }\n\n  public isTranslating() { // is translating while zoom (works on multitouch)\n    return this.pointers.length >= 2\n  }\n\n  public destroy() {\n    this.container.removeEventListener('wheel', this.wheel)\n    this.container.removeEventListener('pointerdown', this.down)\n    this.container.removeEventListener('dblclick', this.dblclick)\n\n    window.removeEventListener('pointermove', this.move)\n    window.removeEventListener('pointerup', this.up)\n    window.removeEventListener('pointercancel', this.up)\n    window.removeEventListener('contextmenu', this.contextmenu)\n  }\n}\n", "import { Content } from './content'\nimport { Drag } from './drag'\nimport { Position } from './types'\nimport { Zoom, ZoomSource } from './zoom'\n\nexport type Transform = Position & { k: number }\nexport type TranslateEventParams = { previous: Transform, position: Position }\nexport type ZoomEventParams = { previous: Transform, zoom: number, source?: ZoomSource }\n\ntype Events = {\n  zoomed: (params: ZoomEventParams) => Promise<unknown>\n  pointerDown: (position: Position, event: PointerEvent) => void\n  pointerMove: (position: Position, event: PointerEvent) => void\n  pointerUp: (position: Position, event: PointerEvent) => void\n  resize: (event: Event) => void\n  translated: (params: TranslateEventParams) => Promise<unknown>\n  reordered: (element: HTMLElement) => Promise<unknown>\n}\ntype Guards = {\n  translate: (params: TranslateEventParams) => Promise<unknown>\n  zoom: (params: ZoomEventParams) => Promise<unknown>\n}\n\nexport class Area {\n  public transform: Transform = { k: 1, x: 0, y: 0 }\n  public pointer: Position = { x: 0, y: 0 }\n  public content: Content\n\n  private zoomHandler: Zoom | null = null\n  private dragHandler: Drag | null = null\n\n  constructor(private container: HTMLElement, private events: Events, private guards: Guards) {\n    this.content = new Content(element => this.events.reordered(element))\n    this.content.holder.style.transformOrigin = '0 0'\n\n    this.setZoomHandler(new Zoom(0.1))\n    this.setDragHandler(new Drag())\n\n    this.container.addEventListener('pointerdown', this.pointerdown)\n    this.container.addEventListener('pointermove', this.pointermove)\n    window.addEventListener('pointerup', this.pointerup)\n    window.addEventListener('resize', this.resize)\n\n    container.appendChild(this.content.holder)\n    this.update()\n  }\n\n  private update() {\n    const { x, y, k } = this.transform\n\n    this.content.holder.style.transform = `translate(${x}px, ${y}px) scale(${k})`\n  }\n\n  /**\n   * Drag handler. Destroy previous drag handler if exists.\n   * @param drag drag handler\n   * @example area.area.setDragHandler(null) // disable drag\n   */\n  public setDragHandler(drag: Drag | null) {\n    if (this.dragHandler) this.dragHandler.destroy()\n    this.dragHandler = drag\n    if (this.dragHandler) this.dragHandler.initialize(\n      this.container,\n      {\n        getCurrentPosition: () => this.transform,\n        getZoom: () => 1\n      },\n      {\n        start: () => null,\n        translate: this.onTranslate,\n        drag: () => null\n      }\n    )\n  }\n\n  /**\n   * Set zoom handler. Destroy previous zoom handler if exists.\n   * @param zoom zoom handler\n   * @example area.area.setZoomHandler(null) // disable zoom\n   */\n  public setZoomHandler(zoom: Zoom | null) {\n    if (this.zoomHandler) this.zoomHandler.destroy()\n    this.zoomHandler = zoom\n    if (this.zoomHandler) this.zoomHandler.initialize(this.container, this.content.holder, this.onZoom)\n  }\n\n  public setPointerFrom(event: MouseEvent) {\n    const { x, y } = this.content.getPointerFrom(event)\n    const { k } = this.transform\n\n    this.pointer = { x: x / k, y: y / k }\n  }\n\n  private pointerdown = (event: PointerEvent) => {\n    this.setPointerFrom(event)\n    this.events.pointerDown(this.pointer, event)\n  }\n\n  private pointermove = (event: PointerEvent) => {\n    this.setPointerFrom(event)\n    this.events.pointerMove(this.pointer, event)\n  }\n\n  private pointerup = (event: PointerEvent) => {\n    this.setPointerFrom(event)\n    this.events.pointerUp(this.pointer, event)\n  }\n\n  private resize = (event: Event) => {\n    this.events.resize(event)\n  }\n\n  private onTranslate = (x: number, y: number) => {\n    if (this.zoomHandler?.isTranslating()) return // lock translation while zoom on multitouch\n    void this.translate(x, y)\n  }\n\n  private onZoom = (delta: number, ox: number, oy: number, source?: ZoomSource) => {\n    void this.zoom(this.transform.k * (1 + delta), ox, oy, source)\n\n    this.update()\n  }\n\n  /**\n   * Change position of the area\n   * @param x desired x coordinate\n   * @param y desired y coordinate\n   * @returns true if the translation was successful, false otherwise\n   * @emits translate\n   * @emits translated\n   */\n  public async translate(x: number, y: number) {\n    type T = undefined | { data: TranslateEventParams }\n    const position = { x, y }\n    const result = await this.guards.translate({ previous: this.transform, position }) as T\n\n    if (!result) return false\n\n    this.transform.x = result.data.position.x\n    this.transform.y = result.data.position.y\n\n    this.update()\n\n    await this.events.translated(result.data)\n    return true\n  }\n\n  /**\n   * Change zoom level of the area\n   * @param zoom new zoom level\n   * @param ox x coordinate of the origin of the zoom\n   * @param oy y coordinate of the origin of the zoom\n   * @param source source of the zoom\n   * @returns true if the zoom was successful, false otherwise\n   * @emits zoom\n   * @emits zoomed\n   */\n  public async zoom(zoom: number, ox = 0, oy = 0, source?: ZoomSource) {\n    type T = undefined | { data: ZoomEventParams }\n    const k = this.transform.k\n    const result = await this.guards.zoom({ previous: this.transform, zoom, source }) as T\n\n    if (!result) return true\n\n    const d = (k - result.data.zoom) / (k - zoom || 1)\n\n    this.transform.k = result.data.zoom || 1\n    this.transform.x += ox * d\n    this.transform.y += oy * d\n\n    this.update()\n\n    await this.events.zoomed(result.data)\n    return false\n  }\n\n  public destroy() {\n    this.container.removeEventListener('pointerdown', this.pointerdown)\n    this.container.removeEventListener('pointermove', this.pointermove)\n    window.removeEventListener('pointerup', this.pointerup)\n    window.removeEventListener('resize', this.resize)\n    if (this.dragHandler) this.dragHandler.destroy()\n    if (this.zoomHandler) this.zoomHandler.destroy()\n    this.content.holder.innerHTML = ''\n  }\n}\n", "/* eslint-disable @typescript-eslint/no-invalid-void-type */\nimport { BaseSchemes, ConnectionId, NodeId, Root, Scope } from 'rete'\n\nimport { NodeResizeEventParams, NodeTranslateEventParams } from './node-view'\nimport { GetRenderTypes, Position, RenderSignal } from './types'\n\ninterface NodeView {\n  element: HTMLElement\n  position: Position\n  translate(x: number, y: number): Promise<boolean>\n  resize(width: number, height: number): Promise<boolean>\n}\n\ninterface ConnectionView {\n  element: HTMLElement\n}\n\ninterface Content {\n  holder: HTMLElement\n  add(element: HTMLElement): void\n  // eslint-disable-next-line no-undef\n  reorder(target: HTMLElement, next: ChildNode | null): void\n  remove(element: HTMLElement): void\n}\n\ninterface Area {\n  pointer: Position\n  content: Content\n}\n\n/**\n * A union of all possible signals that can be emitted by any area plugin\n * @priority 10\n */\nexport type BaseArea<Schemes extends BaseSchemes> =\n  | { type: 'nodepicked', data: { id: string } }\n  | { type: 'nodedragged', data: Schemes['Node'] }\n  | { type: 'nodetranslate', data: { id: string } & NodeTranslateEventParams }\n  | { type: 'nodetranslated', data: { id: string } & NodeTranslateEventParams }\n  | { type: 'contextmenu', data: { event: MouseEvent, context: 'root' | Schemes['Node'] | Schemes['Connection'] } }\n  | { type: 'pointerdown', data: { position: Position, event: PointerEvent } }\n  | { type: 'pointermove', data: { position: Position, event: PointerEvent } }\n  | { type: 'pointerup', data: { position: Position, event: PointerEvent } }\n  | { type: 'noderesize', data: { id: string } & NodeResizeEventParams }\n  | { type: 'noderesized', data: { id: string } & NodeResizeEventParams }\n  | RenderSignal<'node', { payload: Schemes['Node'] }>\n  | RenderSignal<'connection', { payload: Schemes['Connection'], start?: Position, end?: Position }>\n  | { type: 'unmount', data: { element: HTMLElement } }\n  | { type: 'reordered', data: { element: HTMLElement } }\n\n/**\n * Base abstract class for area plugins that provides a common interface\n * @abstract\n */\nexport abstract class BaseAreaPlugin<Schemes extends BaseSchemes, Signals> extends Scope<Signals, [Root<Schemes>]> {\n  public abstract nodeViews: Map<NodeId, NodeView>\n  public abstract connectionViews: Map<ConnectionId, ConnectionView>\n  public abstract area: Area\n\n  abstract addNodeView(connection: Schemes['Node']): NodeView\n  abstract removeNodeView(connection: NodeId): void\n  abstract addConnectionView(connection: Schemes['Connection']): ConnectionView\n  abstract removeConnectionView(connection: ConnectionId): void\n  abstract update(type: GetRenderTypes<Signals>, id: string): Promise<void | boolean | undefined>\n  abstract resize(id: NodeId, width: number, height: number): Promise<void | boolean | undefined>\n  abstract translate(id: NodeId, position: Position): Promise<void | boolean | undefined>\n  abstract destroy(): void\n}\n", "\ntype Events = {\n  contextmenu: (event: MouseEvent) => void\n}\n\nexport class ConnectionView {\n  element: HTMLElement\n\n  constructor(events: Events) {\n    this.element = document.createElement('div')\n\n    this.element.style.position = 'absolute'\n    this.element.style.left = '0'\n    this.element.style.top = '0'\n    this.element.addEventListener('contextmenu', event => events.contextmenu(event))\n  }\n}\n", "\nexport class ElementsHolder<E extends HTMLElement, Ctx extends { type: string, element: E, payload?: { id: string } }> {\n  views = new WeakMap<E, Ctx>()\n  viewsElements = new Map<`${string}_${string}`, E>()\n\n  public set(context: Ctx) {\n    const { element, type, payload } = context\n\n    if (payload?.id) {\n      this.views.set(element, context)\n      this.viewsElements.set(`${type}_${payload.id}`, element)\n    }\n  }\n\n  public get(type: string, id: string) {\n    const element = this.viewsElements.get(`${type}_${id}`)\n\n    return element && this.views.get(element)\n  }\n\n  public delete(element: E) {\n    const view = this.views.get(element)\n\n    if (view && view.payload?.id) {\n      this.views.delete(element)\n      this.viewsElements.delete(`${view.type}_${view.payload.id}`)\n    }\n  }\n}\n", "import { Drag } from './drag'\nimport { Position, Size } from './types'\n\nexport type NodeTranslateEventParams = { position: Position, previous: Position }\nexport type NodeResizeEventParams = { size: Size }\n\ntype Events = {\n  picked: () => void\n  translated: (params: NodeTranslateEventParams) => Promise<unknown>\n  dragged: () => void\n  contextmenu: (event: MouseEvent) => void\n  resized: (params: NodeResizeEventParams) => Promise<unknown>\n}\ntype Guards = {\n  resize: (params: NodeResizeEventParams) => Promise<unknown>\n  translate: (params: NodeTranslateEventParams) => Promise<unknown>\n}\n\nexport class NodeView {\n  element: HTMLElement\n  position: Position\n  dragHandler: Drag\n\n  constructor(private getZoom: () => number, private events: Events, private guards: Guards) {\n    this.element = document.createElement('div')\n    this.element.style.position = 'absolute'\n    this.position = { x: 0, y: 0 }\n    void this.translate(0, 0)\n\n    this.element.addEventListener('contextmenu', event => this.events.contextmenu(event))\n\n    this.dragHandler = new Drag()\n    this.dragHandler.initialize(\n      this.element,\n      {\n        getCurrentPosition: () => this.position,\n        getZoom: () => this.getZoom()\n      },\n      {\n        start: this.events.picked,\n        translate: this.translate,\n        drag: this.events.dragged\n      }\n    )\n  }\n  public translate = async (x: number, y: number) => {\n    type Params = undefined | { data: NodeTranslateEventParams }\n    const previous = { ...this.position }\n    const translation = await this.guards.translate({ previous, position: { x, y } }) as Params\n\n    if (!translation) return false\n\n    this.position = { ...translation.data.position }\n    this.element.style.transform = `translate(${this.position.x}px, ${this.position.y}px)`\n\n    await this.events.translated({ position: this.position, previous })\n\n    return true\n  }\n  public resize = async (width: number, height: number) => {\n    const size = { width, height }\n\n    if (!await this.guards.resize({ size })) return false\n\n    const el = this.element.querySelector('*:not(span):not([fragment])')\n\n    if (!el || !(el instanceof HTMLElement)) return false\n\n    el.style.width = `${width}px`\n    el.style.height = `${height}px`\n\n    await this.events.resized({ size })\n\n    return true\n  }\n\n  public destroy() {\n    this.dragHandler.destroy()\n  }\n}\n", "import { BaseAreaPlugin } from '../../base'\nimport { NodeView } from '../../node-view'\nimport { SchemesWithSizes } from './types'\n\nexport function getNodesRect<S extends SchemesWithSizes, K>(nodes: S['Node'][], views: BaseAreaPlugin<S, K>['nodeViews']) {\n  return nodes\n    .map(node => ({ view: views.get(node.id) as NodeView, node }))\n    .filter(item => item.view)\n    .map(({ view, node }) => {\n      const { width, height } = node\n\n      if (typeof width !== 'undefined' && typeof height !== 'undefined') {\n        return {\n          position: view.position,\n          width,\n          height\n        }\n      }\n\n      return {\n        position: view.position,\n        width: view.element.clientWidth,\n        height: view.element.clientHeight\n      }\n    })\n}\n", "import { BaseSchemes, NodeEditor } from 'rete'\n\nimport { BaseAreaPlugin } from '../base'\nimport { getBoundingBox as getBBox } from '../utils'\nimport { NodeRef } from './shared/types'\nimport { getNodesRect } from './shared/utils'\n\n/**\n * Get the bounding box of the given nodes\n * @param plugin The area plugin\n * @param nodes The nodes to get the bounding box of\n * @returns The bounding box\n */\nexport function getBoundingBox<Schemes extends BaseSchemes, K>(plugin: BaseAreaPlugin<Schemes, K>, nodes: NodeRef<Schemes>[]) {\n  const editor = plugin.parentScope<NodeEditor<Schemes>>(NodeEditor)\n  const list = nodes.map(node => typeof node === 'object'\n    ? node\n    : editor.getNode(node))\n  const rects = getNodesRect(list, plugin.nodeViews)\n\n  return getBBox(rects)\n}\n", "import { BaseSchemes } from 'rete'\n\nimport { BaseArea, BaseAreaPlugin } from '../base'\n\n/**\n * Simple nodes order extension\n * @param base The base area plugin\n * @listens nodepicked\n * @listens connectioncreated\n */\nexport function simpleNodesOrder<Schemes extends BaseSchemes, T>(base: BaseAreaPlugin<Schemes, T>) {\n  const area = base as BaseAreaPlugin<Schemes, BaseArea<Schemes>>\n\n  area.addPipe(context => {\n    if (!context || typeof context !== 'object' || !('type' in context)) return context\n\n    if (context.type === 'nodepicked') {\n      const view = area.nodeViews.get(context.data.id)\n      const { content } = area.area\n\n      if (view) {\n        content.reorder(view.element, null)\n      }\n    }\n    if (context.type === 'connectioncreated') {\n      const view = area.connectionViews.get(context.data.id)\n      const { content } = area.area\n\n      if (view) {\n        content.reorder(view.element, content.holder.firstChild)\n      }\n    }\n    return context\n  })\n}\n", "import { BaseSchemes } from 'rete'\n\nimport { AreaPlugin } from '..'\nimport { Position } from '../types'\n\ntype ScaleRange = { min: number, max: number }\ntype TranslateRange = { left: number, top: number, right: number, bottom: number }\n\n/**\n * Restrictor extension parameters\n */\nexport type Params = {\n  /** The scaling range */\n  scaling?: ScaleRange | (() => ScaleRange) | boolean\n  /** The translation range */\n  translation?: TranslateRange | (() => TranslateRange) | boolean\n}\n\n/**\n * Restrictor extension. Restricts the area zoom and position\n * @param plugin The area plugin\n * @param params The restrictor parameters\n * @listens zoom\n * @listens zoomed\n * @listens translated\n */\nexport function restrictor<Schemes extends BaseSchemes, K>(plugin: AreaPlugin<Schemes, K>, params?: Params) {\n  const scaling = params?.scaling\n    ? params.scaling === true\n      ? { min: 0.1, max: 1 }\n      : params.scaling\n    : false\n  const translation = params?.translation\n    ? params.translation === true\n      ? { left: 0, top: 0, right: 1000, bottom: 1000 }\n      : params.translation\n    : false\n\n  function restrictZoom(zoom: number) {\n    if (!scaling) throw new Error('scaling param isnt defined')\n    const { min, max } = typeof scaling === 'function'\n      ? scaling()\n      : scaling\n\n    if (zoom < min) {\n      return min\n    } else if (zoom > max) {\n      return max\n    }\n    return zoom\n  }\n\n  // eslint-disable-next-line max-statements\n  function restrictPosition(position: Position): Position {\n    if (!translation) throw new Error('translation param isnt defined')\n    const nextPosition = { ...position }\n    const { left, top, right, bottom } = typeof translation === 'function'\n      ? translation()\n      : translation\n\n    if (nextPosition.x < left) {\n      nextPosition.x = left\n    }\n    if (nextPosition.x > right) {\n      nextPosition.x = right\n    }\n    if (nextPosition.y < top) {\n      nextPosition.y = top\n    }\n    if (nextPosition.y > bottom) {\n      nextPosition.y = bottom\n    }\n\n    return nextPosition\n  }\n\n  plugin.addPipe(context => {\n    if (!context || typeof context !== 'object' || !('type' in context)) return context\n    if (scaling && context.type === 'zoom') {\n      return {\n        ...context,\n        data: {\n          ...context.data,\n          zoom: restrictZoom(context.data.zoom)\n        }\n      }\n    }\n    if (translation && context.type === 'zoomed') {\n      const position = restrictPosition(plugin.area.transform)\n\n      void plugin.area.translate(position.x, position.y)\n    }\n    if (translation && context.type === 'translate') {\n      return {\n        ...context,\n        data: {\n          ...context.data,\n          position: restrictPosition(context.data.position)\n        }\n      }\n    }\n    return context\n  })\n}\n", "import { BaseSchemes, GetSchemes, NodeEditor, NodeId } from 'rete'\n\nimport { BaseArea, BaseAreaPlugin } from '../base'\n\ntype Schemes = GetSchemes<BaseSchemes['Node'] & { selected?: boolean }, any>\n\n/**\n * Selector's accumulate function, activated when the ctrl key is pressed\n */\nexport function accumulateOnCtrl() {\n  let pressed = false\n\n  function keydown(e: KeyboardEvent) {\n    if (e.key === 'Control' || e.key === 'Meta') pressed = true\n  }\n  function keyup(e: KeyboardEvent) {\n    if (e.key === 'Control' || e.key === 'Meta') pressed = false\n  }\n\n  document.addEventListener('keydown', keydown)\n  document.addEventListener('keyup', keyup)\n\n  return {\n    active() {\n      return pressed\n    },\n    destroy() {\n      document.removeEventListener('keydown', keydown)\n      document.removeEventListener('keyup', keyup)\n    }\n  }\n}\n\nexport type SelectorEntity = {\n  label: string\n  id: string\n  unselect(): void | Promise<void>\n  translate(dx: number, dy: number): void | Promise<void>\n}\n\n/**\n * Selector class. Used to collect selected entities (nodes, connections, etc.) and synchronize them (select, unselect, translate, etc.).\n * Can be extended to add custom functionality.\n */\nexport class Selector<E extends SelectorEntity> {\n  entities = new Map<string, E>()\n  pickId: string | null = null\n\n  isSelected(entity: Pick<E, 'label' | 'id'>) {\n    return this.entities.has(`${entity.label}_${entity.id}`)\n  }\n\n  async add(entity: E, accumulate: boolean) {\n    if (!accumulate) await this.unselectAll()\n    this.entities.set(`${entity.label}_${entity.id}`, entity)\n  }\n\n  async remove(entity: Pick<E, 'label' | 'id'>) {\n    const id = `${entity.label}_${entity.id}`\n    const item = this.entities.get(id)\n\n    if (item) {\n      this.entities.delete(id)\n      await item.unselect()\n    }\n  }\n\n  async unselectAll() {\n    await Promise.all([...Array.from(this.entities.values())].map(item => this.remove(item)))\n  }\n\n  async translate(dx: number, dy: number) {\n    await Promise.all(Array.from(this.entities.values()).map(item => !this.isPicked(item) && item.translate(dx, dy)))\n  }\n\n  pick(entity: Pick<E, 'label' | 'id'>) {\n    this.pickId = `${entity.label}_${entity.id}`\n  }\n\n  release() {\n    this.pickId = null\n  }\n\n  isPicked(entity: Pick<E, 'label' | 'id'>) {\n    return this.pickId === `${entity.label}_${entity.id}`\n  }\n}\n\n/**\n * Selector factory, uses default Selector class\n * @returns Selector instance\n */\nexport function selector<E extends SelectorEntity>() {\n  return new Selector<E>()\n}\n\n/**\n * Accumulating interface, used to determine whether to accumulate entities on selection\n */\nexport type Accumulating = {\n  active(): boolean\n}\n\nexport type Selectable = ReturnType<typeof selector>\n\n/**\n * Selectable nodes extension. Adds the ability to select nodes in the area.\n * @param base BaseAreaPlugin instance\n * @param core Selectable instance\n * @param options.accumulating Accumulating interface\n * @listens nodepicked\n * @listens nodetranslated\n * @listens pointerdown\n * @listens pointermove\n * @listens pointerup\n */\nexport function selectableNodes<T>(base: BaseAreaPlugin<Schemes, T>, core: Selectable, options: { accumulating: Accumulating }) {\n  let editor: null | NodeEditor<Schemes> = null\n  const area = base as BaseAreaPlugin<Schemes, BaseArea<Schemes>>\n  const getEditor = () => editor || (editor = area.parentScope<NodeEditor<Schemes>>(NodeEditor))\n\n  let twitch: null | number = 0\n\n  function selectNode(node: Schemes['Node']) {\n    if (!node.selected) {\n      node.selected = true\n      void area.update('node', node.id)\n    }\n  }\n\n  function unselectNode(node: Schemes['Node']) {\n    if (node.selected) {\n      node.selected = false\n      void area.update('node', node.id)\n    }\n  }\n  /**\n   * Select node programmatically\n   * @param nodeId Node id\n   * @param accumulate Whether to accumulate nodes on selection\n   */\n  async function add(nodeId: NodeId, accumulate: boolean) {\n    const node = getEditor().getNode(nodeId)\n\n    if (!node) return\n\n    await core.add({\n      label: 'node',\n      id: node.id,\n      async translate(dx, dy) {\n        const view = area.nodeViews.get(node.id)\n        const current = view?.position\n\n        if (current) {\n          await view.translate(current.x + dx, current.y + dy)\n        }\n      },\n      unselect() {\n        unselectNode(node)\n      }\n    }, accumulate)\n    selectNode(node)\n  }\n  /**\n   * Unselect node programmatically\n   * @param nodeId Node id\n   */\n  async function remove(nodeId: NodeId) {\n    await core.remove({ id: nodeId, label: 'node' })\n  }\n\n  // eslint-disable-next-line max-statements, complexity\n  area.addPipe(async context => {\n    if (!context || typeof context !== 'object' || !('type' in context)) return context\n\n    if (context.type === 'nodepicked') {\n      const pickedId = context.data.id\n      const accumulate = options.accumulating.active()\n\n      core.pick({ id: pickedId, label: 'node' })\n      twitch = null\n      await add(pickedId, accumulate)\n    } else if (context.type === 'nodetranslated') {\n      const { id, position, previous } = context.data\n      const dx = position.x - previous.x\n      const dy = position.y - previous.y\n\n      if (core.isPicked({ id, label: 'node' })) await core.translate(dx, dy)\n    } else if (context.type === 'pointerdown') {\n      twitch = 0\n    } else if (context.type === 'pointermove') {\n      if (twitch !== null) twitch++\n    } else if (context.type === 'pointerup') {\n      if (twitch !== null && twitch < 4) {\n        await core.unselectAll()\n      }\n      twitch = null\n    }\n    return context\n  })\n\n  return {\n    select: add,\n    unselect: remove\n  }\n}\n\n", "import { BaseSchemes, ClassicPreset as Classic, GetSchemes, NodeEditor } from 'rete'\n\nimport { BaseAreaPlugin } from '../base'\n\ntype Scheme = GetSchemes<Classic.Node, Classic.Connection<Classic.Node, Classic.Node>>\ntype Visible<S extends Scheme> = (props: { hasAnyConnection: boolean, input: NonNullable<S['Node']['inputs'][string]> }) => boolean\n\n/**\n * Show input control extension. It will show the input's control when there is no connection and hide it when there is a connection.\n * @param area The base area plugin\n * @param visible The visible function\n * @listens connectioncreated\n * @listens connectionremoved\n */\nexport function showInputControl<S extends Scheme>(area: BaseAreaPlugin<BaseSchemes, any>, visible?: Visible<S>) {\n  let editor: null | NodeEditor<S> = null\n  const getEditor = () => editor || (editor = area.parentScope<NodeEditor<S>>(NodeEditor))\n\n  function updateInputControlVisibility(target: string, targetInput: string) {\n    const node = getEditor().getNode(target)\n\n    if (!node) return\n\n    const input = (node.inputs as Record<string, S['Node']['inputs'][string] | undefined>)[targetInput]\n\n    if (!input) throw new Error('cannot find input')\n\n    const previous = input.showControl\n    const connections = getEditor().getConnections()\n    const hasAnyConnection = Boolean(connections.find(connection => {\n      return connection.target === target && connection.targetInput === targetInput\n    }))\n\n    input.showControl = visible\n      ? visible({ hasAnyConnection, input })\n      : !hasAnyConnection\n\n    if (input.showControl !== previous) {\n      void area.update('node', node.id)\n    }\n  }\n\n  area.addPipe(context => {\n    if (context.type === 'connectioncreated' || context.type === 'connectionremoved') {\n      updateInputControlVisibility(context.data.target, context.data.targetInput)\n    }\n    return context\n  })\n}\n", "import { BaseSchemes } from 'rete'\n\nimport { BaseArea, BaseAreaPlugin } from '../base'\n\n/**\n * Snap grid extension parameters\n */\nexport type Params = {\n  /** The grid size */\n  size?: number\n  /** Whether to snap on node drag */\n  dynamic?: boolean\n}\n\n/**\n * Snap grid extension\n * @param base The base area plugin\n * @param params The snap parameters\n * @listens nodetranslate\n * @listens nodedragged\n */\nexport function snapGrid<Schemes extends BaseSchemes, K>(base: BaseAreaPlugin<Schemes, K>, params?: Params) {\n  const area = base as BaseAreaPlugin<Schemes, BaseArea<Schemes>>\n  const size = typeof params?.size === 'undefined'\n    ? 16\n    : params.size\n  const dynamic = typeof params?.dynamic === 'undefined'\n    ? true\n    : params.dynamic\n\n  function snap(value: number) {\n    return Math.round(value / size) * size\n  }\n\n  area.addPipe(context => {\n    if (!context || typeof context !== 'object' || !('type' in context)) return context\n    if (dynamic && context.type === 'nodetranslate') {\n      const { position } = context.data\n      const x = snap(position.x)\n      const y = snap(position.y)\n\n      return {\n        ...context,\n        data: {\n          ...context.data,\n          position: { x, y }\n        }\n      }\n    }\n    if (!dynamic && context.type === 'nodedragged') {\n      const view = area.nodeViews.get(context.data.id)\n\n      if (view) {\n        const { x, y } = view.position\n\n        void view.translate(snap(x), snap(y))\n      }\n    }\n    return context\n  })\n}\n", "import { NodeEditor } from 'rete'\n\nimport { AreaPlugin } from '..'\nimport { getBoundingBox } from '../utils'\nimport { NodeRef, SchemesWithSizes } from './shared/types'\nimport { getNodesRect } from './shared/utils'\n\n/**\n * Zoom extension parameters\n */\nexport type Params = {\n  /** Set gap between nodes and the viewport border */\n  scale?: number\n}\n\n/**\n * Zooms the area to fit the given nodes\n * @param plugin The area plugin\n * @param nodes The nodes to fit\n * @param params The zoom parameters\n */\n// eslint-disable-next-line max-statements, max-len\nexport async function zoomAt<Schemes extends SchemesWithSizes, K>(plugin: AreaPlugin<Schemes, K>, nodes: NodeRef<Schemes>[], params?: Params) {\n  const { scale = 0.9 } = params || {}\n  const editor = plugin.parentScope<NodeEditor<Schemes>>(NodeEditor)\n  const list = nodes.map(node => typeof node === 'object'\n    ? node\n    : editor.getNode(node))\n  const rects = getNodesRect(list, plugin.nodeViews)\n  const boundingBox = getBoundingBox(rects)\n  const [w, h] = [plugin.container.clientWidth, plugin.container.clientHeight]\n  const [kw, kh] = [w / boundingBox.width, h / boundingBox.height]\n  const k = Math.min(kh * scale, kw * scale, 1)\n\n  plugin.area.transform.x = w / 2 - boundingBox.center.x * k\n  plugin.area.transform.y = h / 2 - boundingBox.center.y * k\n  await plugin.area.zoom(k, 0, 0)\n}\n", "/**\n * Area extensions\n * @priority 7\n * @module Extensions\n */\nexport { getBoundingBox } from './bounding-box'\nexport { simpleNodesOrder } from './order'\nexport type { Params as Restrictor } from './restrictor'\nexport { restrictor } from './restrictor'\nexport { accumulateOnCtrl, selectableNodes, Selector, selector } from './selectable'\nexport { showInputControl } from './show-input-control'\nexport type { Params as SnapGrid } from './snap'\nexport { snapGrid } from './snap'\nexport type { Params as ZoomAt } from './zoom-at'\nexport { zoomAt } from './zoom-at'\n", "import { BaseSchemes, ConnectionId, NodeId, Root } from 'rete'\n\nimport { Area, TranslateEventParams, ZoomEventParams } from './area'\nimport { BaseArea, BaseAreaPlugin } from './base'\nimport { ConnectionView } from './connection-view'\nimport { ElementsHolder } from './elements-holder'\nimport { NodeView } from './node-view'\nimport { GetRenderTypes, Position, RenderMeta } from './types'\n\nexport { Area } from './area'\nexport type { BaseArea } from './base'\nexport { BaseAreaPlugin } from './base'\nexport { Drag } from './drag'\nexport * as AreaExtensions from './extensions'\nexport { NodeView } from './node-view'\nexport type { RenderSignal } from './types'\nexport type { PointerListener } from './utils'\nexport { usePointerListener } from './utils'\nexport { Zoom } from './zoom'\n\n/**\n * A union of all possible signals that can be emitted by the area\n * @priority 9\n */\nexport type Area2D<Schemes extends BaseSchemes> =\n  | BaseArea<Schemes>\n  | { type: 'translate', data: TranslateEventParams }\n  | { type: 'translated', data: TranslateEventParams }\n  | { type: 'zoom', data: ZoomEventParams }\n  | { type: 'zoomed', data: ZoomEventParams }\n  | { type: 'resized', data: { event: Event } }\n\nexport type Area2DInherited<Schemes extends BaseSchemes, ExtraSignals = never> = [Area2D<Schemes> | ExtraSignals, Root<Schemes>]\n\n/**\n * A plugin that provides a 2D area for nodes and connections\n * @priority 8\n * @emits render\n * @emits rendered\n * @emits unmount\n * @listens nodecreated\n * @listens noderemoved\n * @listens connectioncreated\n * @listens connectionremoved\n */\nexport class AreaPlugin<Schemes extends BaseSchemes, ExtraSignals = never> extends BaseAreaPlugin<Schemes, Area2D<Schemes> | ExtraSignals> {\n  public nodeViews = new Map<NodeId, NodeView>()\n  public connectionViews = new Map<ConnectionId, ConnectionView>()\n  public area: Area\n  private elements = new ElementsHolder<HTMLElement, Extract<Area2D<Schemes>, { type: 'render' }>['data'] & RenderMeta>()\n\n  constructor(public container: HTMLElement) {\n    super('area')\n    container.style.overflow = 'hidden'\n    container.addEventListener('contextmenu', this.onContextMenu)\n\n    // eslint-disable-next-line max-statements\n    this.addPipe(context => {\n      if (!context || !(typeof context === 'object' && 'type' in context)) return context\n      if (context.type === 'nodecreated') {\n        this.addNodeView(context.data)\n      }\n      if (context.type === 'noderemoved') {\n        this.removeNodeView(context.data.id)\n      }\n      if (context.type === 'connectioncreated') {\n        this.addConnectionView(context.data)\n      }\n      if (context.type === 'connectionremoved') {\n        this.removeConnectionView(context.data.id)\n      }\n      if (context.type === 'render') {\n        this.elements.set(context.data)\n      }\n      if (context.type === 'unmount') {\n        this.elements.delete(context.data.element)\n      }\n      return context\n    })\n    this.area = new Area(\n      container,\n      {\n        zoomed: params => this.emit({ type: 'zoomed', data: params }),\n        pointerDown: (position, event) => void this.emit({ type: 'pointerdown', data: { position, event } }),\n        pointerMove: (position, event) => void this.emit({ type: 'pointermove', data: { position, event } }),\n        pointerUp: (position, event) => void this.emit({ type: 'pointerup', data: { position, event } }),\n        resize: event => void this.emit({ type: 'resized', data: { event } }),\n        translated: params => this.emit({ type: 'translated', data: params }),\n        reordered: element => this.emit({ type: 'reordered', data: { element } })\n      },\n      {\n        translate: params => this.emit({ type: 'translate', data: params }),\n        zoom: params => this.emit({ type: 'zoom', data: params })\n      }\n    )\n  }\n\n  private onContextMenu = (event: MouseEvent) => {\n    void this.emit({ type: 'contextmenu', data: { event, context: 'root' } })\n  }\n\n  public addNodeView(node: Schemes['Node']) {\n    const { id } = node\n    const view = new NodeView(\n      () => this.area.transform.k,\n      {\n        picked: () => void this.emit({ type: 'nodepicked', data: { id } }),\n        translated: data => this.emit({ type: 'nodetranslated', data: { id, ...data } }),\n        dragged: () => void this.emit({ type: 'nodedragged', data: node }),\n        contextmenu: event => void this.emit({ type: 'contextmenu', data: { event, context: node } }),\n        resized: ({ size }) => this.emit({ type: 'noderesized', data: { id: node.id, size } })\n      },\n      {\n        translate: data => this.emit({ type: 'nodetranslate', data: { id, ...data } }),\n        resize: ({ size }) => this.emit({ type: 'noderesize', data: { id: node.id, size } })\n      }\n    )\n\n    this.nodeViews.set(id, view)\n    this.area.content.add(view.element)\n\n    void this.emit({\n      type: 'render',\n      data: { element: view.element, type: 'node', payload: node }\n    })\n\n    return view\n  }\n\n  public removeNodeView(id: NodeId) {\n    const view = this.nodeViews.get(id)\n\n    if (view) {\n      void this.emit({ type: 'unmount', data: { element: view.element } })\n      this.nodeViews.delete(id)\n      this.area.content.remove(view.element)\n    }\n  }\n\n  public addConnectionView(connection: Schemes['Connection']) {\n    const view = new ConnectionView({\n      contextmenu: event => void this.emit({ type: 'contextmenu', data: { event, context: connection } })\n    })\n\n    this.connectionViews.set(connection.id, view)\n    this.area.content.add(view.element)\n\n    void this.emit({\n      type: 'render',\n      data: { element: view.element, type: 'connection', payload: connection }\n    })\n\n    return view\n  }\n\n  public removeConnectionView(id: ConnectionId) {\n    const view = this.connectionViews.get(id)\n\n    if (view) {\n      void this.emit({ type: 'unmount', data: { element: view.element } })\n      this.connectionViews.delete(id)\n      this.area.content.remove(view.element)\n    }\n  }\n\n  /**\n   * Force update rendered element by id (node, connection, etc.)\n   * @param type Element type\n   * @param id Element id\n   * @emits render\n   */\n  public async update(type: GetRenderTypes<Area2D<Schemes>> | GetRenderTypes<ExtraSignals>, id: string) {\n    const data = this.elements.get(type, id)\n\n    if (data) await this.emit({ type: 'render', data } as Area2D<Schemes>)\n  }\n\n  /**\n   * Resize node\n   * @param id Node id\n   * @param width Desired width\n   * @param height Desired height\n   */\n  public async resize(id: NodeId, width: number, height: number) {\n    const view = this.nodeViews.get(id)\n\n    if (view) return await view.resize(width, height)\n  }\n\n  /**\n   * Translate node to position\n   * @param id Node id\n   * @param position Position\n   */\n  public async translate(id: NodeId, { x, y }: Position) {\n    const view = this.nodeViews.get(id)\n\n    if (view) return await view.translate(x, y)\n  }\n\n  /**\n   * Destroy all views and remove all event listeners\n   */\n  public destroy() {\n    this.container.removeEventListener('contextmenu', this.onContextMenu)\n    Array.from(this.connectionViews.keys()).forEach(id => this.removeConnectionView(id))\n    Array.from(this.nodeViews.keys()).forEach(id => this.removeNodeView(id))\n    this.area.destroy()\n  }\n}\n"],
  "mappings": "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",
  "names": ["Content", "reordered", "_classCallCheck", "holder", "document", "createElement", "style", "transformOrigin", "_createClass", "key", "value", "getPointerFrom", "event", "_this$holder$getBound", "getBoundingClientRect", "left", "top", "x", "clientX", "y", "clientY", "add", "element", "appendChild", "_reorder", "_asyncToGenerator", "_regeneratorRuntime", "mark", "_callee", "target", "next", "wrap", "_callee$", "_context", "prev", "contains", "Error", "insertBefore", "stop", "reorder", "_x", "_x2", "apply", "arguments", "remove", "removeChild", "usePointerListener", "handlers", "move", "up", "window", "removeEventListener", "down", "addEventListener", "destroy", "min", "arr", "length", "Math", "_toConsumableArray", "max", "getBoundingBox", "rects", "map", "rect", "position", "right", "width", "bottom", "height", "abs", "center", "Drag", "guards", "_this", "_defineProperty", "e", "stopPropagation", "pointerStart", "pageX", "pageY", "startPosition", "_objectSpread", "config", "getCurrentPosition", "events", "start", "preventDefault", "delta", "zoom", "getZoom", "translate", "drag", "pointerType", "button", "initialize", "touchAction", "pointerListener", "Zoom", "intensity", "_this$element$getBoun", "isNegative", "deltaY", "ox", "oy", "onzoom", "pointers", "push", "p", "pointerId", "isTranslating", "_this$element$getBoun2", "_this$getTouches", "getTouches", "cx", "cy", "distance", "previous", "filter", "_this$element$getBoun3", "container", "wheel", "dblclick", "contextmenu", "touches", "_ref", "x1", "y1", "_ref2", "x2", "y2", "sqrt", "pow", "Area", "k", "setPointerFrom", "pointerDown", "pointer", "pointerMove", "pointerUp", "resize", "_this$zoomHandler", "zoomHandler", "source", "transform", "update", "content", "setZoomHandler", "setDragHandler", "pointerdown", "pointermove", "pointerup", "_this$transform", "concat", "_this2", "dragHandler", "onTranslate", "onZoom", "_this$content$getPoin", "_translate", "result", "sent", "abrupt", "data", "translated", "_zoom2", "_callee2", "d", "_args2", "_callee2$", "_context2", "undefined", "zoomed", "_x3", "innerHTML", "BaseAreaPlugin", "_Scope", "_callSuper", "_inherits", "Scope", "ConnectionView", "ElementsHolder", "WeakMap", "Map", "set", "context", "type", "payload", "id", "views", "viewsElements", "get", "delete", "_view$payload", "view", "NodeView", "translation", "size", "el", "querySelector", "HTMLElement", "resized", "_x4", "picked", "dragged", "getNodesRect", "nodes", "node", "item", "clientWidth", "clientHeight", "plugin", "editor", "parentScope", "NodeEditor", "list", "_typeof", "getNode", "nodeViews", "getBBox", "simpleNodesOrder", "base", "area", "addPipe", "connectionViews", "firstChild", "restrictor", "params", "scaling", "restrictZoom", "restrictPosition", "nextPosition", "accumulateOnCtrl", "pressed", "keydown", "keyup", "active", "Selector", "isSelected", "entity", "entities", "has", "label", "_add", "accumulate", "unselectAll", "_remove", "unselect", "_unselectAll", "_callee3", "_callee3$", "_context3", "Promise", "all", "Array", "from", "values", "_callee4", "dx", "dy", "_callee4$", "_context4", "isPicked", "_x5", "pick", "pickId", "release", "selector", "selectableNodes", "core", "options", "getEditor", "twitch", "selectNode", "selected", "unselectNode", "_x6", "_x7", "_add2", "_callee7", "nodeId", "_callee7$", "_context7", "_callee6", "current", "_callee6$", "_context6", "_x8", "_remove2", "_callee8", "_callee8$", "_context8", "_callee5", "pickedId", "_context$data", "_dx", "_dy", "_callee5$", "_context5", "accumulating", "_x9", "select", "showInputControl", "visible", "updateInputControlVisibility", "targetInput", "input", "inputs", "showControl", "connections", "getConnections", "hasAnyConnection", "Boolean", "find", "connection", "snapGrid", "dynamic", "snap", "round", "_view$position", "zoomAt", "_zoomAt", "_ref$scale", "scale", "boundingBox", "w", "h", "kw", "kh", "AreaPlugin", "_BaseAreaPlugin", "emit", "overflow", "onContextMenu", "addNodeView", "removeNodeView", "addConnectionView", "removeConnectionView", "elements", "_this3", "_update", "_resize", "_ref3", "_this4", "keys", "forEach"]
}
